---
- name: Check that Docker installed and extract Server version
  shell: "docker version | grep -Po '(?<=Server version: )\\d.\\d.\\d'"
  ignore_errors: True
  register: docker_installed
  
- name: Get uname
  command: uname -r
  register: os_uname
  when: docker_installed | failed or docker_installed.stdout != docker_version

- name: Add apt-key
  apt_key:
    keyserver: p80.pool.sks-keyservers.net
    id: 36A1D7869245C8950F966E92D8576A8BA88D21E9
  when: docker_installed | failed or docker_installed.stdout != docker_version
  register: key_added
  until: key_added.changed
  
- name: Add Docker repo
  apt_repository:
    repo: deb http://get.docker.io/ubuntu docker main
    state: present
  when: docker_installed | failed or docker_installed.stdout != docker_version
  register: repo_added
  until: repo_added.changed
    
- name: Install os packages
  apt:
    pkg: "{{item}}"
    state: present
    update_cache: yes
  with_items: 
    - linux-image-extra-{{os_uname.stdout}}
    - lxc-docker={{docker_version}}
  when: docker_installed | failed or docker_installed.stdout != docker_version
  register: docker_pkg_installed
  until: docker_pkg_installed.changed
  notify:
  - Restart Docker
  
- name: Copy docker.service
  sudo: yes
  copy:
    src: docker.service
    dest: /etc/systemd/system/docker.service
  notify:
  - Reload SystemD
  - Restart Docker
  
- name: Adjust DOCKER_STORAGE
  lineinfile:
    dest: /etc/default/docker
    line: 'DOCKER_STORAGE="-s overlay"'
  notify:
  - Restart Docker

- name: Adjust DOCKER_NETWORK
  lineinfile:
    dest: /etc/default/docker
    line: "DOCKER_NETWORK=' --bridge=docker-ovs --fixed-cidr={{ docker_subnet }} --icc=false'"
  notify:
  - Restart Docker
  
- meta: flush_handlers